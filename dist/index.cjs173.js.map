{"version":3,"file":"index.cjs173.js","sources":["../node_modules/react-day-picker/dist/esm/useAnimation.js"],"sourcesContent":["import { useLayoutEffect, useRef } from \"react\";\nimport { Animation } from \"./UI.js\";\nconst asHtmlElement = (element) => {\n    if (element instanceof HTMLElement)\n        return element;\n    return null;\n};\nconst queryMonthEls = (element) => [\n    ...(element.querySelectorAll(\"[data-animated-month]\") ?? []),\n];\nconst queryMonthEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-month]\"));\nconst queryCaptionEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-caption]\"));\nconst queryWeeksEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-weeks]\"));\nconst queryNavEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-nav]\"));\nconst queryWeekdaysEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-weekdays]\"));\n/**\n * Handles animations for transitioning between months in the DayPicker\n * component.\n *\n * @private\n * @param rootElRef - A reference to the root element of the DayPicker\n *   component.\n * @param enabled - Whether animations are enabled.\n * @param options - Configuration options for the animation, including class\n *   names, months, focused day, and the date utility library.\n */\nexport function useAnimation(rootElRef, enabled, { classNames, months, focused, dateLib, }) {\n    const previousRootElSnapshotRef = useRef(null);\n    const previousMonthsRef = useRef(months);\n    const animatingRef = useRef(false);\n    useLayoutEffect(() => {\n        // get previous months before updating the previous months ref\n        const previousMonths = previousMonthsRef.current;\n        // update previous months ref for next effect trigger\n        previousMonthsRef.current = months;\n        if (!enabled ||\n            !rootElRef.current ||\n            // safety check because the ref can be set to anything by consumers\n            !(rootElRef.current instanceof HTMLElement) ||\n            // validation required for the animation to work as expected\n            months.length === 0 ||\n            previousMonths.length === 0 ||\n            months.length !== previousMonths.length) {\n            return;\n        }\n        const isSameMonth = dateLib.isSameMonth(months[0].date, previousMonths[0].date);\n        const isAfterPreviousMonth = dateLib.isAfter(months[0].date, previousMonths[0].date);\n        const captionAnimationClass = isAfterPreviousMonth\n            ? classNames[Animation.caption_after_enter]\n            : classNames[Animation.caption_before_enter];\n        const weeksAnimationClass = isAfterPreviousMonth\n            ? classNames[Animation.weeks_after_enter]\n            : classNames[Animation.weeks_before_enter];\n        // get previous root element snapshot before updating the snapshot ref\n        const previousRootElSnapshot = previousRootElSnapshotRef.current;\n        // update snapshot for next effect trigger\n        const rootElSnapshot = rootElRef.current.cloneNode(true);\n        if (rootElSnapshot instanceof HTMLElement) {\n            // if this effect is triggered while animating, we need to clean up the new root snapshot\n            // to put it in the same state as when not animating, to correctly animate the next month change\n            const currentMonthElsSnapshot = queryMonthEls(rootElSnapshot);\n            currentMonthElsSnapshot.forEach((currentMonthElSnapshot) => {\n                if (!(currentMonthElSnapshot instanceof HTMLElement))\n                    return;\n                // remove the old month snapshots from the new root snapshot\n                const previousMonthElSnapshot = queryMonthEl(currentMonthElSnapshot);\n                if (previousMonthElSnapshot &&\n                    currentMonthElSnapshot.contains(previousMonthElSnapshot)) {\n                    currentMonthElSnapshot.removeChild(previousMonthElSnapshot);\n                }\n                // remove animation classes from the new month snapshots\n                const captionEl = queryCaptionEl(currentMonthElSnapshot);\n                if (captionEl) {\n                    captionEl.classList.remove(captionAnimationClass);\n                }\n                const weeksEl = queryWeeksEl(currentMonthElSnapshot);\n                if (weeksEl) {\n                    weeksEl.classList.remove(weeksAnimationClass);\n                }\n            });\n            previousRootElSnapshotRef.current = rootElSnapshot;\n        }\n        else {\n            previousRootElSnapshotRef.current = null;\n        }\n        if (animatingRef.current ||\n            isSameMonth ||\n            // skip animation if a day is focused because it can cause issues to the animation and is better for a11y\n            focused) {\n            return;\n        }\n        const previousMonthEls = previousRootElSnapshot instanceof HTMLElement\n            ? queryMonthEls(previousRootElSnapshot)\n            : [];\n        const currentMonthEls = queryMonthEls(rootElRef.current);\n        if (currentMonthEls?.every((el) => el instanceof HTMLElement) &&\n            previousMonthEls &&\n            previousMonthEls.every((el) => el instanceof HTMLElement)) {\n            animatingRef.current = true;\n            const cleanUpFunctions = [];\n            // set isolation to isolate to isolate the stacking context during animation\n            rootElRef.current.style.isolation = \"isolate\";\n            // set z-index to 1 to ensure the nav is clickable over the other elements being animated\n            const navEl = queryNavEl(rootElRef.current);\n            if (navEl) {\n                navEl.style.zIndex = \"1\";\n            }\n            currentMonthEls.forEach((currentMonthEl, index) => {\n                const previousMonthEl = previousMonthEls[index];\n                if (!previousMonthEl) {\n                    return;\n                }\n                // animate new displayed month\n                currentMonthEl.style.position = \"relative\";\n                currentMonthEl.style.overflow = \"hidden\";\n                const captionEl = queryCaptionEl(currentMonthEl);\n                if (captionEl) {\n                    captionEl.classList.add(captionAnimationClass);\n                }\n                const weeksEl = queryWeeksEl(currentMonthEl);\n                if (weeksEl) {\n                    weeksEl.classList.add(weeksAnimationClass);\n                }\n                // animate new displayed month end\n                const cleanUp = () => {\n                    animatingRef.current = false;\n                    if (rootElRef.current) {\n                        rootElRef.current.style.isolation = \"\";\n                    }\n                    if (navEl) {\n                        navEl.style.zIndex = \"\";\n                    }\n                    if (captionEl) {\n                        captionEl.classList.remove(captionAnimationClass);\n                    }\n                    if (weeksEl) {\n                        weeksEl.classList.remove(weeksAnimationClass);\n                    }\n                    currentMonthEl.style.position = \"\";\n                    currentMonthEl.style.overflow = \"\";\n                    if (currentMonthEl.contains(previousMonthEl)) {\n                        currentMonthEl.removeChild(previousMonthEl);\n                    }\n                };\n                cleanUpFunctions.push(cleanUp);\n                // animate old displayed month\n                previousMonthEl.style.pointerEvents = \"none\";\n                previousMonthEl.style.position = \"absolute\";\n                previousMonthEl.style.overflow = \"hidden\";\n                previousMonthEl.setAttribute(\"aria-hidden\", \"true\");\n                // hide the weekdays container of the old month and only the new one\n                const previousWeekdaysEl = queryWeekdaysEl(previousMonthEl);\n                if (previousWeekdaysEl) {\n                    previousWeekdaysEl.style.opacity = \"0\";\n                }\n                const previousCaptionEl = queryCaptionEl(previousMonthEl);\n                if (previousCaptionEl) {\n                    previousCaptionEl.classList.add(isAfterPreviousMonth\n                        ? classNames[Animation.caption_before_exit]\n                        : classNames[Animation.caption_after_exit]);\n                    previousCaptionEl.addEventListener(\"animationend\", cleanUp);\n                }\n                const previousWeeksEl = queryWeeksEl(previousMonthEl);\n                if (previousWeeksEl) {\n                    previousWeeksEl.classList.add(isAfterPreviousMonth\n                        ? classNames[Animation.weeks_before_exit]\n                        : classNames[Animation.weeks_after_exit]);\n                }\n                currentMonthEl.insertBefore(previousMonthEl, currentMonthEl.firstChild);\n            });\n        }\n    });\n}\n"],"names":["asHtmlElement","element","queryMonthEls","queryMonthEl","queryCaptionEl","queryWeeksEl","queryNavEl","queryWeekdaysEl","useAnimation","rootElRef","enabled","classNames","months","focused","dateLib","previousRootElSnapshotRef","useRef","previousMonthsRef","animatingRef","useLayoutEffect","previousMonths","isSameMonth","isAfterPreviousMonth","captionAnimationClass","Animation","weeksAnimationClass","previousRootElSnapshot","rootElSnapshot","currentMonthElSnapshot","previousMonthElSnapshot","captionEl","weeksEl","previousMonthEls","currentMonthEls","el","navEl","currentMonthEl","index","previousMonthEl","cleanUp","previousWeekdaysEl","previousCaptionEl","previousWeeksEl"],"mappings":"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","x_google_ignoreList":[0]}