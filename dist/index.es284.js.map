{"version":3,"file":"index.es284.js","sources":["../node_modules/react-day-picker/dist/esm/helpers/getNavMonth.js"],"sourcesContent":["/**\n * Returns the start and end months for calendar navigation.\n *\n * @param props The DayPicker props, including navigation and layout options.\n * @param dateLib The date library to use for date manipulation.\n * @returns A tuple containing the start and end months for navigation.\n */\nexport function getNavMonths(props, dateLib) {\n    let { startMonth, endMonth } = props;\n    const { startOfYear, startOfDay, startOfMonth, endOfMonth, addYears, endOfYear, newDate, today, } = dateLib;\n    // Handle deprecated code\n    const { fromYear, toYear, fromMonth, toMonth } = props;\n    if (!startMonth && fromMonth) {\n        startMonth = fromMonth;\n    }\n    if (!startMonth && fromYear) {\n        startMonth = dateLib.newDate(fromYear, 0, 1);\n    }\n    if (!endMonth && toMonth) {\n        endMonth = toMonth;\n    }\n    if (!endMonth && toYear) {\n        endMonth = newDate(toYear, 11, 31);\n    }\n    const hasYearDropdown = props.captionLayout === \"dropdown\" ||\n        props.captionLayout === \"dropdown-years\";\n    if (startMonth) {\n        startMonth = startOfMonth(startMonth);\n    }\n    else if (fromYear) {\n        startMonth = newDate(fromYear, 0, 1);\n    }\n    else if (!startMonth && hasYearDropdown) {\n        startMonth = startOfYear(addYears(props.today ?? today(), -100));\n    }\n    if (endMonth) {\n        endMonth = endOfMonth(endMonth);\n    }\n    else if (toYear) {\n        endMonth = newDate(toYear, 11, 31);\n    }\n    else if (!endMonth && hasYearDropdown) {\n        endMonth = endOfYear(props.today ?? today());\n    }\n    return [\n        startMonth ? startOfDay(startMonth) : startMonth,\n        endMonth ? startOfDay(endMonth) : endMonth,\n    ];\n}\n"],"names":["getNavMonths","props","dateLib","startMonth","endMonth","startOfYear","startOfDay","startOfMonth","endOfMonth","addYears","endOfYear","newDate","today","fromYear","toYear","fromMonth","toMonth","hasYearDropdown"],"mappings":"AAOO,SAASA,EAAaC,GAAOC,GAAS;AACzC,MAAI,EAAE,YAAAC,GAAY,UAAAC,EAAQ,IAAKH;AAC/B,QAAM,EAAE,aAAAI,GAAa,YAAAC,GAAY,cAAAC,GAAc,YAAAC,GAAY,UAAAC,GAAU,WAAAC,GAAW,SAAAC,GAAS,OAAAC,EAAK,IAAMV,GAE9F,EAAE,UAAAW,GAAU,QAAAC,GAAQ,WAAAC,GAAW,SAAAC,EAAO,IAAKf;AACjD,EAAI,CAACE,KAAcY,MACfZ,IAAaY,IAEb,CAACZ,KAAcU,MACfV,IAAaD,EAAQ,QAAQW,GAAU,GAAG,CAAC,IAE3C,CAACT,KAAYY,MACbZ,IAAWY,IAEX,CAACZ,KAAYU,MACbV,IAAWO,EAAQG,GAAQ,IAAI,EAAE;AAErC,QAAMG,IAAkBhB,EAAM,kBAAkB,cAC5CA,EAAM,kBAAkB;AAC5B,SAAIE,IACAA,IAAaI,EAAaJ,CAAU,IAE/BU,IACLV,IAAaQ,EAAQE,GAAU,GAAG,CAAC,IAE9B,CAACV,KAAcc,MACpBd,IAAaE,EAAYI,EAASR,EAAM,SAASW,EAAK,GAAI,IAAI,CAAC,IAE/DR,IACAA,IAAWI,EAAWJ,CAAQ,IAEzBU,IACLV,IAAWO,EAAQG,GAAQ,IAAI,EAAE,IAE5B,CAACV,KAAYa,MAClBb,IAAWM,EAAUT,EAAM,SAASW,EAAK,CAAE,IAExC;AAAA,IACHT,KAAaG,EAAWH,CAAU;AAAA,IAClCC,KAAWE,EAAWF,CAAQ;AAAA,EACtC;AACA;","x_google_ignoreList":[0]}