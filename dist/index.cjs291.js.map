{"version":3,"file":"index.cjs291.js","sources":["../node_modules/react-day-picker/dist/esm/selection/useMulti.js"],"sourcesContent":["import { useControlledValue } from \"../helpers/useControlledValue.js\";\n/**\n * Hook to manage multiple-date selection in the DayPicker component.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns An object containing the selected dates, a function to select dates,\n *   and a function to check if a date is selected.\n */\nexport function useMulti(props, dateLib) {\n    const { selected: initiallySelected, required, onSelect, } = props;\n    const [internallySelected, setSelected] = useControlledValue(initiallySelected, onSelect ? initiallySelected : undefined);\n    const selected = !onSelect ? internallySelected : initiallySelected;\n    const { isSameDay } = dateLib;\n    const isSelected = (date) => {\n        return selected?.some((d) => isSameDay(d, date)) ?? false;\n    };\n    const { min, max } = props;\n    const select = (triggerDate, modifiers, e) => {\n        let newDates = [...(selected ?? [])];\n        if (isSelected(triggerDate)) {\n            if (selected?.length === min) {\n                // Min value reached, do nothing\n                return;\n            }\n            if (required && selected?.length === 1) {\n                // Required value already selected do nothing\n                return;\n            }\n            newDates = selected?.filter((d) => !isSameDay(d, triggerDate));\n        }\n        else {\n            if (selected?.length === max) {\n                // Max value reached, reset the selection to date\n                newDates = [triggerDate];\n            }\n            else {\n                // Add the date to the selection\n                newDates = [...newDates, triggerDate];\n            }\n        }\n        if (!onSelect) {\n            setSelected(newDates);\n        }\n        onSelect?.(newDates, triggerDate, modifiers, e);\n        return newDates;\n    };\n    return {\n        selected,\n        select,\n        isSelected,\n    };\n}\n"],"names":["useMulti","props","dateLib","initiallySelected","required","onSelect","internallySelected","setSelected","useControlledValue","selected","isSameDay","isSelected","date","d","min","max","triggerDate","modifiers","e","newDates"],"mappings":"qHAUO,SAASA,EAASC,EAAOC,EAAS,CACrC,KAAM,CAAE,SAAUC,EAAmB,SAAAC,EAAU,SAAAC,CAAQ,EAAMJ,EACvD,CAACK,EAAoBC,CAAW,EAAIC,EAAAA,mBAAmBL,EAAmBE,EAAWF,EAAoB,MAAS,EAClHM,EAAYJ,EAAgCF,EAArBG,EACvB,CAAE,UAAAI,CAAS,EAAKR,EAChBS,EAAcC,GACTH,GAAU,KAAMI,GAAMH,EAAUG,EAAGD,CAAI,CAAC,GAAK,GAElD,CAAE,IAAAE,EAAK,IAAAC,CAAG,EAAKd,EA8BrB,MAAO,CACH,SAAAQ,EACA,OA/BW,CAACO,EAAaC,EAAWC,IAAM,CAC1C,IAAIC,EAAW,CAAC,GAAIV,GAAY,CAAA,CAAG,EACnC,GAAIE,EAAWK,CAAW,EAAG,CAKzB,GAJIP,GAAU,SAAWK,GAIrBV,GAAYK,GAAU,SAAW,EAEjC,OAEJU,EAAWV,GAAU,OAAQI,GAAM,CAACH,EAAUG,EAAGG,CAAW,CAAC,CACjE,MAEQP,GAAU,SAAWM,EAErBI,EAAW,CAACH,CAAW,EAIvBG,EAAW,CAAC,GAAGA,EAAUH,CAAW,EAG5C,OAAKX,GACDE,EAAYY,CAAQ,EAExBd,IAAWc,EAAUH,EAAaC,EAAWC,CAAC,EACvCC,CACX,EAII,WAAAR,CACR,CACA","x_google_ignoreList":[0]}