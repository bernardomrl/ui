{"version":3,"file":"index.es355.js","sources":["../node_modules/lodash/_baseIsEqual.js"],"sourcesContent":["var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n"],"names":["baseIsEqualDeep","require$$0","isObjectLike","require$$1","baseIsEqual","value","other","bitmask","customizer","stack","_baseIsEqual"],"mappings":";;;;;;AAAA,MAAIA,IAAkBC,EAAA,GAClBC,IAAeC,EAAA;AAgBnB,WAASC,EAAYC,GAAOC,GAAOC,GAASC,GAAYC,GAAO;AAC7D,WAAIJ,MAAUC,IACL,KAELD,KAAS,QAAQC,KAAS,QAAS,CAACJ,EAAaG,CAAK,KAAK,CAACH,EAAaI,CAAK,IACzED,MAAUA,KAASC,MAAUA,IAE/BN,EAAgBK,GAAOC,GAAOC,GAASC,GAAYJ,GAAaK,CAAK;AAAA,EAC9E;AAEA,SAAAC,IAAiBN;;","x_google_ignoreList":[0]}