{"version":3,"file":"index.es375.js","sources":["../node_modules/lodash/_baseUniq.js"],"sourcesContent":["var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n"],"names":["SetCache","require$$0","arrayIncludes","require$$1","arrayIncludesWith","require$$2","cacheHas","require$$3","createSet","require$$4","setToArray","require$$5","LARGE_ARRAY_SIZE","baseUniq","array","iteratee","comparator","index","includes","length","isCommon","result","seen","set","outer","value","computed","seenIndex","_baseUniq"],"mappings":";;;;;;;;;;AAAA,MAAIA,IAAWC,EAAA,GACXC,IAAgBC,EAAA,GAChBC,IAAoBC,EAAA,GACpBC,IAAWC,EAAA,GACXC,IAAYC,EAAA,GACZC,IAAaC,EAAA,GAGbC,IAAmB;AAWvB,WAASC,EAASC,GAAOC,GAAUC,GAAY;AAC7C,QAAIC,IAAQ,IACRC,IAAWhB,GACXiB,IAASL,EAAM,QACfM,IAAW,IACXC,IAAS,CAAA,GACTC,IAAOD;AAEX,QAAIL;AACF,MAAAI,IAAW,IACXF,IAAWd;AAAA,aAEJe,KAAUP,GAAkB;AACnC,UAAIW,IAAMR,IAAW,OAAOP,EAAUM,CAAK;AAC3C,UAAIS;AACF,eAAOb,EAAWa,CAAG;AAEvB,MAAAH,IAAW,IACXF,IAAWZ,GACXgB,IAAO,IAAItB;AAAA,IACf;AAEI,MAAAsB,IAAOP,IAAW,CAAA,IAAKM;AAEzB,IAAAG;AACA,aAAO,EAAEP,IAAQE,KAAQ;AACvB,YAAIM,IAAQX,EAAMG,CAAK,GACnBS,IAAWX,IAAWA,EAASU,CAAK,IAAIA;AAG5C,YADAA,IAAST,KAAcS,MAAU,IAAKA,IAAQ,GAC1CL,KAAYM,MAAaA,GAAU;AAErC,mBADIC,IAAYL,EAAK,QACdK;AACL,gBAAIL,EAAKK,CAAS,MAAMD;AACtB,uBAASF;AAGb,UAAIT,KACFO,EAAK,KAAKI,CAAQ,GAEpBL,EAAO,KAAKI,CAAK;AAAA,QACvB,MACS,CAAKP,EAASI,GAAMI,GAAUV,CAAU,MACvCM,MAASD,KACXC,EAAK,KAAKI,CAAQ,GAEpBL,EAAO,KAAKI,CAAK;AAAA,MAEvB;AACE,WAAOJ;AAAA,EACT;AAEA,SAAAO,IAAiBf;;","x_google_ignoreList":[0]}