{"version":3,"file":"index.cjs358.js","sources":["../node_modules/lodash/_isKey.js"],"sourcesContent":["var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n"],"names":["isArray","require$$0","isSymbol","require$$1","reIsDeepProp","reIsPlainProp","isKey","value","object","type","_isKey"],"mappings":"2LAAA,IAAIA,EAAUC,EAAAA,UAAA,EACVC,EAAWC,EAAAA,UAAA,EAGXC,EAAe,mDACfC,EAAgB,QAUpB,SAASC,EAAMC,EAAOC,EAAQ,CAC5B,GAAIR,EAAQO,CAAK,EACf,MAAO,GAET,IAAIE,EAAO,OAAOF,EAClB,OAAIE,GAAQ,UAAYA,GAAQ,UAAYA,GAAQ,WAChDF,GAAS,MAAQL,EAASK,CAAK,EAC1B,GAEFF,EAAc,KAAKE,CAAK,GAAK,CAACH,EAAa,KAAKG,CAAK,GACzDC,GAAU,MAAQD,KAAS,OAAOC,CAAM,CAC7C,CAEA,OAAAE,EAAiBJ","x_google_ignoreList":[0]}