{"version":3,"file":"index.cjs289.js","sources":["../node_modules/react-day-picker/dist/esm/helpers/calculateFocusTarget.js"],"sourcesContent":["import { DayFlag } from \"../UI.js\";\nvar FocusTargetPriority;\n(function (FocusTargetPriority) {\n    FocusTargetPriority[FocusTargetPriority[\"Today\"] = 0] = \"Today\";\n    FocusTargetPriority[FocusTargetPriority[\"Selected\"] = 1] = \"Selected\";\n    FocusTargetPriority[FocusTargetPriority[\"LastFocused\"] = 2] = \"LastFocused\";\n    FocusTargetPriority[FocusTargetPriority[\"FocusedModifier\"] = 3] = \"FocusedModifier\";\n})(FocusTargetPriority || (FocusTargetPriority = {}));\n/**\n * Determines if a day is focusable based on its modifiers.\n *\n * A day is considered focusable if it is not disabled, hidden, or outside the\n * displayed month.\n *\n * @param modifiers The modifiers applied to the day.\n * @returns `true` if the day is focusable, otherwise `false`.\n */\nfunction isFocusableDay(modifiers) {\n    return (!modifiers[DayFlag.disabled] &&\n        !modifiers[DayFlag.hidden] &&\n        !modifiers[DayFlag.outside]);\n}\n/**\n * Calculates the focus target day based on priority.\n *\n * This function determines the day that should receive focus in the calendar,\n * prioritizing days with specific modifiers (e.g., \"focused\", \"today\") or\n * selection states.\n *\n * @param days The array of `CalendarDay` objects to evaluate.\n * @param getModifiers A function to retrieve the modifiers for a given day.\n * @param isSelected A function to determine if a day is selected.\n * @param lastFocused The last focused day, if any.\n * @returns The `CalendarDay` that should receive focus, or `undefined` if no\n *   focusable day is found.\n */\nexport function calculateFocusTarget(days, getModifiers, isSelected, lastFocused) {\n    let focusTarget;\n    let foundFocusTargetPriority = -1;\n    for (const day of days) {\n        const modifiers = getModifiers(day);\n        if (isFocusableDay(modifiers)) {\n            if (modifiers[DayFlag.focused] &&\n                foundFocusTargetPriority < FocusTargetPriority.FocusedModifier) {\n                focusTarget = day;\n                foundFocusTargetPriority = FocusTargetPriority.FocusedModifier;\n            }\n            else if (lastFocused?.isEqualTo(day) &&\n                foundFocusTargetPriority < FocusTargetPriority.LastFocused) {\n                focusTarget = day;\n                foundFocusTargetPriority = FocusTargetPriority.LastFocused;\n            }\n            else if (isSelected(day.date) &&\n                foundFocusTargetPriority < FocusTargetPriority.Selected) {\n                focusTarget = day;\n                foundFocusTargetPriority = FocusTargetPriority.Selected;\n            }\n            else if (modifiers[DayFlag.today] &&\n                foundFocusTargetPriority < FocusTargetPriority.Today) {\n                focusTarget = day;\n                foundFocusTargetPriority = FocusTargetPriority.Today;\n            }\n        }\n    }\n    if (!focusTarget) {\n        // Return the first day that is focusable\n        focusTarget = days.find((day) => isFocusableDay(getModifiers(day)));\n    }\n    return focusTarget;\n}\n"],"names":["FocusTargetPriority","isFocusableDay","modifiers","DayFlag","calculateFocusTarget","days","getModifiers","isSelected","lastFocused","focusTarget","foundFocusTargetPriority","day"],"mappings":"qHACA,IAAIA,GACH,SAAUA,EAAqB,CAC5BA,EAAoBA,EAAoB,MAAW,CAAC,EAAI,QACxDA,EAAoBA,EAAoB,SAAc,CAAC,EAAI,WAC3DA,EAAoBA,EAAoB,YAAiB,CAAC,EAAI,cAC9DA,EAAoBA,EAAoB,gBAAqB,CAAC,EAAI,iBACtE,GAAGA,IAAwBA,EAAsB,CAAA,EAAG,EAUpD,SAASC,EAAeC,EAAW,CAC/B,MAAQ,CAACA,EAAUC,EAAAA,QAAQ,QAAQ,GAC/B,CAACD,EAAUC,EAAAA,QAAQ,MAAM,GACzB,CAACD,EAAUC,EAAAA,QAAQ,OAAO,CAClC,CAeO,SAASC,EAAqBC,EAAMC,EAAcC,EAAYC,EAAa,CAC9E,IAAIC,EACAC,EAA2B,GAC/B,UAAWC,KAAON,EAAM,CACpB,MAAMH,EAAYI,EAAaK,CAAG,EAC9BV,EAAeC,CAAS,IACpBA,EAAUC,EAAAA,QAAQ,OAAO,GACzBO,EAA2BV,EAAoB,iBAC/CS,EAAcE,EACdD,EAA2BV,EAAoB,iBAE1CQ,GAAa,UAAUG,CAAG,GAC/BD,EAA2BV,EAAoB,aAC/CS,EAAcE,EACdD,EAA2BV,EAAoB,aAE1CO,EAAWI,EAAI,IAAI,GACxBD,EAA2BV,EAAoB,UAC/CS,EAAcE,EACdD,EAA2BV,EAAoB,UAE1CE,EAAUC,EAAAA,QAAQ,KAAK,GAC5BO,EAA2BV,EAAoB,QAC/CS,EAAcE,EACdD,EAA2BV,EAAoB,OAG3D,CACA,OAAKS,IAEDA,EAAcJ,EAAK,KAAMM,GAAQV,EAAeK,EAAaK,CAAG,CAAC,CAAC,GAE/DF,CACX","x_google_ignoreList":[0]}