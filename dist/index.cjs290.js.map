{"version":3,"file":"index.cjs290.js","sources":["../node_modules/react-day-picker/dist/esm/helpers/getNextFocus.js"],"sourcesContent":["import { CalendarDay } from \"../classes/index.js\";\nimport { dateMatchModifiers } from \"../utils/dateMatchModifiers.js\";\nimport { getFocusableDate } from \"./getFocusableDate.js\";\n/**\n * Determines the next focusable day in the calendar.\n *\n * This function recursively calculates the next focusable day based on the\n * movement direction and modifiers applied to the days.\n *\n * @param moveBy The unit of movement (e.g., \"day\", \"week\").\n * @param moveDir The direction of movement (\"before\" or \"after\").\n * @param refDay The currently focused day.\n * @param calendarStartMonth The earliest month the user can navigate to.\n * @param calendarEndMonth The latest month the user can navigate to.\n * @param props The DayPicker props, including modifiers and configuration\n *   options.\n * @param dateLib The date library to use for date manipulation.\n * @param attempt The current recursion attempt (used to limit recursion depth).\n * @returns The next focusable day, or `undefined` if no focusable day is found.\n */\nexport function getNextFocus(moveBy, moveDir, refDay, calendarStartMonth, calendarEndMonth, props, dateLib, attempt = 0) {\n    if (attempt > 365) {\n        // Limit the recursion to 365 attempts\n        return undefined;\n    }\n    const focusableDate = getFocusableDate(moveBy, moveDir, refDay.date, calendarStartMonth, calendarEndMonth, props, dateLib);\n    const isDisabled = Boolean(props.disabled &&\n        dateMatchModifiers(focusableDate, props.disabled, dateLib));\n    const isHidden = Boolean(props.hidden && dateMatchModifiers(focusableDate, props.hidden, dateLib));\n    const targetMonth = focusableDate;\n    const focusDay = new CalendarDay(focusableDate, targetMonth, dateLib);\n    if (!isDisabled && !isHidden) {\n        return focusDay;\n    }\n    // Recursively attempt to find the next focusable date\n    return getNextFocus(moveBy, moveDir, focusDay, calendarStartMonth, calendarEndMonth, props, dateLib, attempt + 1);\n}\n"],"names":["getNextFocus","moveBy","moveDir","refDay","calendarStartMonth","calendarEndMonth","props","dateLib","attempt","focusableDate","getFocusableDate","isDisabled","dateMatchModifiers","isHidden","targetMonth","focusDay","CalendarDay"],"mappings":"mLAoBO,SAASA,EAAaC,EAAQC,EAASC,EAAQC,EAAoBC,EAAkBC,EAAOC,EAASC,EAAU,EAAG,CACrH,GAAIA,EAAU,IAEV,OAEJ,MAAMC,EAAgBC,EAAAA,iBAAiBT,EAAQC,EAASC,EAAO,KAAMC,EAAoBC,EAAkBC,EAAOC,CAAO,EACnHI,EAAa,GAAQL,EAAM,UAC7BM,EAAAA,mBAAmBH,EAAeH,EAAM,SAAUC,CAAO,GACvDM,EAAW,GAAQP,EAAM,QAAUM,qBAAmBH,EAAeH,EAAM,OAAQC,CAAO,GAC1FO,EAAcL,EACdM,EAAW,IAAIC,EAAAA,YAAYP,EAAeK,EAAaP,CAAO,EACpE,MAAI,CAACI,GAAc,CAACE,EACTE,EAGJf,EAAaC,EAAQC,EAASa,EAAUX,EAAoBC,EAAkBC,EAAOC,EAASC,EAAU,CAAC,CACpH","x_google_ignoreList":[0]}