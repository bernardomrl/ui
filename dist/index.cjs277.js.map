{"version":3,"file":"index.cjs277.js","sources":["../node_modules/react-day-picker/dist/esm/utils/rangeContainsModifiers.js"],"sourcesContent":["import { defaultDateLib } from \"../classes/DateLib.js\";\nimport { dateMatchModifiers } from \"./dateMatchModifiers.js\";\nimport { rangeContainsDayOfWeek } from \"./rangeContainsDayOfWeek.js\";\nimport { rangeIncludesDate } from \"./rangeIncludesDate.js\";\nimport { rangeOverlaps } from \"./rangeOverlaps.js\";\nimport { isDateAfterType, isDateBeforeType, isDateInterval, isDateRange, isDatesArray, isDayOfWeekType, } from \"./typeguards.js\";\n/**\n * Checks if a date range contains dates that match the given modifiers.\n *\n * @since 9.2.2\n * @param range - The date range to check.\n * @param modifiers - The modifiers to match against.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the range contains matching dates, otherwise `false`.\n * @group Utilities\n */\nexport function rangeContainsModifiers(range, modifiers, dateLib = defaultDateLib) {\n    const matchers = Array.isArray(modifiers) ? modifiers : [modifiers];\n    // Defer function matchers evaluation as they are the least performant.\n    const nonFunctionMatchers = matchers.filter((matcher) => typeof matcher !== \"function\");\n    const nonFunctionMatchersResult = nonFunctionMatchers.some((matcher) => {\n        if (typeof matcher === \"boolean\")\n            return matcher;\n        if (dateLib.isDate(matcher)) {\n            return rangeIncludesDate(range, matcher, false, dateLib);\n        }\n        if (isDatesArray(matcher, dateLib)) {\n            return matcher.some((date) => rangeIncludesDate(range, date, false, dateLib));\n        }\n        if (isDateRange(matcher)) {\n            if (matcher.from && matcher.to) {\n                return rangeOverlaps(range, { from: matcher.from, to: matcher.to }, dateLib);\n            }\n            return false;\n        }\n        if (isDayOfWeekType(matcher)) {\n            return rangeContainsDayOfWeek(range, matcher.dayOfWeek, dateLib);\n        }\n        if (isDateInterval(matcher)) {\n            const isClosedInterval = dateLib.isAfter(matcher.before, matcher.after);\n            if (isClosedInterval) {\n                return rangeOverlaps(range, {\n                    from: dateLib.addDays(matcher.after, 1),\n                    to: dateLib.addDays(matcher.before, -1),\n                }, dateLib);\n            }\n            return (dateMatchModifiers(range.from, matcher, dateLib) ||\n                dateMatchModifiers(range.to, matcher, dateLib));\n        }\n        if (isDateAfterType(matcher) || isDateBeforeType(matcher)) {\n            return (dateMatchModifiers(range.from, matcher, dateLib) ||\n                dateMatchModifiers(range.to, matcher, dateLib));\n        }\n        return false;\n    });\n    if (nonFunctionMatchersResult) {\n        return true;\n    }\n    const functionMatchers = matchers.filter((matcher) => typeof matcher === \"function\");\n    if (functionMatchers.length) {\n        let date = range.from;\n        const totalDays = dateLib.differenceInCalendarDays(range.to, range.from);\n        for (let i = 0; i <= totalDays; i++) {\n            if (functionMatchers.some((matcher) => matcher(date))) {\n                return true;\n            }\n            date = dateLib.addDays(date, 1);\n        }\n    }\n    return false;\n}\n"],"names":["rangeContainsModifiers","range","modifiers","dateLib","defaultDateLib","matchers","matcher","rangeIncludesDate","isDatesArray","date","isDateRange","rangeOverlaps","isDayOfWeekType","rangeContainsDayOfWeek","isDateInterval","dateMatchModifiers","isDateAfterType","isDateBeforeType","functionMatchers","totalDays","i"],"mappings":"gRAgBO,SAASA,EAAuBC,EAAOC,EAAWC,EAAUC,EAAAA,eAAgB,CAC/E,MAAMC,EAAW,MAAM,QAAQH,CAAS,EAAIA,EAAY,CAACA,CAAS,EAsClE,GApC4BG,EAAS,OAAQC,GAAY,OAAOA,GAAY,UAAU,EAChC,KAAMA,GACpD,OAAOA,GAAY,UACZA,EACPH,EAAQ,OAAOG,CAAO,EACfC,EAAAA,kBAAkBN,EAAOK,EAAS,GAAOH,CAAO,EAEvDK,EAAAA,aAAaF,EAASH,CAAO,EACtBG,EAAQ,KAAMG,GAASF,EAAAA,kBAAkBN,EAAOQ,EAAM,GAAON,CAAO,CAAC,EAE5EO,EAAAA,YAAYJ,CAAO,EACfA,EAAQ,MAAQA,EAAQ,GACjBK,gBAAcV,EAAO,CAAE,KAAMK,EAAQ,KAAM,GAAIA,EAAQ,EAAE,EAAIH,CAAO,EAExE,GAEPS,EAAAA,gBAAgBN,CAAO,EAChBO,EAAAA,uBAAuBZ,EAAOK,EAAQ,UAAWH,CAAO,EAE/DW,EAAAA,eAAeR,CAAO,EACGH,EAAQ,QAAQG,EAAQ,OAAQA,EAAQ,KAAK,EAE3DK,EAAAA,cAAcV,EAAO,CACxB,KAAME,EAAQ,QAAQG,EAAQ,MAAO,CAAC,EACtC,GAAIH,EAAQ,QAAQG,EAAQ,OAAQ,EAAE,CAC1D,EAAmBH,CAAO,EAENY,EAAAA,mBAAmBd,EAAM,KAAMK,EAASH,CAAO,GACnDY,EAAAA,mBAAmBd,EAAM,GAAIK,EAASH,CAAO,EAEjDa,EAAAA,gBAAgBV,CAAO,GAAKW,EAAAA,iBAAiBX,CAAO,EAC5CS,EAAAA,mBAAmBd,EAAM,KAAMK,EAASH,CAAO,GACnDY,EAAAA,mBAAmBd,EAAM,GAAIK,EAASH,CAAO,EAE9C,EACV,EAEG,MAAO,GAEX,MAAMe,EAAmBb,EAAS,OAAQC,GAAY,OAAOA,GAAY,UAAU,EACnF,GAAIY,EAAiB,OAAQ,CACzB,IAAIT,EAAOR,EAAM,KACjB,MAAMkB,EAAYhB,EAAQ,yBAAyBF,EAAM,GAAIA,EAAM,IAAI,EACvE,QAASmB,EAAI,EAAGA,GAAKD,EAAWC,IAAK,CACjC,GAAIF,EAAiB,KAAMZ,GAAYA,EAAQG,CAAI,CAAC,EAChD,MAAO,GAEXA,EAAON,EAAQ,QAAQM,EAAM,CAAC,CAClC,CACJ,CACA,MAAO,EACX","x_google_ignoreList":[0]}