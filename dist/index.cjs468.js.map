{"version":3,"file":"index.cjs468.js","sources":["../node_modules/react-remove-scroll-bar/dist/es2015/component.js"],"sourcesContent":["import * as React from 'react';\nimport { styleSingleton } from 'react-style-singleton';\nimport { fullWidthClassName, zeroRightClassName, noScrollbarsClassName, removedBarSizeVariable } from './constants';\nimport { getGapWidth } from './utils';\nvar Style = styleSingleton();\nexport var lockAttribute = 'data-scroll-locked';\n// important tip - once we measure scrollBar width and remove them\n// we could not repeat this operation\n// thus we are using style-singleton - only the first \"yet correct\" style will be applied.\nvar getStyles = function (_a, allowRelative, gapMode, important) {\n    var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;\n    if (gapMode === void 0) { gapMode = 'margin'; }\n    return \"\\n  .\".concat(noScrollbarsClassName, \" {\\n   overflow: hidden \").concat(important, \";\\n   padding-right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  body[\").concat(lockAttribute, \"] {\\n    overflow: hidden \").concat(important, \";\\n    overscroll-behavior: contain;\\n    \").concat([\n        allowRelative && \"position: relative \".concat(important, \";\"),\n        gapMode === 'margin' &&\n            \"\\n    padding-left: \".concat(left, \"px;\\n    padding-top: \").concat(top, \"px;\\n    padding-right: \").concat(right, \"px;\\n    margin-left:0;\\n    margin-top:0;\\n    margin-right: \").concat(gap, \"px \").concat(important, \";\\n    \"),\n        gapMode === 'padding' && \"padding-right: \".concat(gap, \"px \").concat(important, \";\"),\n    ]\n        .filter(Boolean)\n        .join(''), \"\\n  }\\n  \\n  .\").concat(zeroRightClassName, \" {\\n    right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  \\n  .\").concat(fullWidthClassName, \" {\\n    margin-right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  \\n  .\").concat(zeroRightClassName, \" .\").concat(zeroRightClassName, \" {\\n    right: 0 \").concat(important, \";\\n  }\\n  \\n  .\").concat(fullWidthClassName, \" .\").concat(fullWidthClassName, \" {\\n    margin-right: 0 \").concat(important, \";\\n  }\\n  \\n  body[\").concat(lockAttribute, \"] {\\n    \").concat(removedBarSizeVariable, \": \").concat(gap, \"px;\\n  }\\n\");\n};\nvar getCurrentUseCounter = function () {\n    var counter = parseInt(document.body.getAttribute(lockAttribute) || '0', 10);\n    return isFinite(counter) ? counter : 0;\n};\nexport var useLockAttribute = function () {\n    React.useEffect(function () {\n        document.body.setAttribute(lockAttribute, (getCurrentUseCounter() + 1).toString());\n        return function () {\n            var newCounter = getCurrentUseCounter() - 1;\n            if (newCounter <= 0) {\n                document.body.removeAttribute(lockAttribute);\n            }\n            else {\n                document.body.setAttribute(lockAttribute, newCounter.toString());\n            }\n        };\n    }, []);\n};\n/**\n * Removes page scrollbar and blocks page scroll when mounted\n */\nexport var RemoveScrollBar = function (_a) {\n    var noRelative = _a.noRelative, noImportant = _a.noImportant, _b = _a.gapMode, gapMode = _b === void 0 ? 'margin' : _b;\n    useLockAttribute();\n    /*\n     gap will be measured on every component mount\n     however it will be used only by the \"first\" invocation\n     due to singleton nature of <Style\n     */\n    var gap = React.useMemo(function () { return getGapWidth(gapMode); }, [gapMode]);\n    return React.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? '!important' : '') });\n};\n"],"names":["Style","styleSingleton","lockAttribute","getStyles","_a","allowRelative","gapMode","important","left","top","right","gap","noScrollbarsClassName","zeroRightClassName","fullWidthClassName","removedBarSizeVariable","getCurrentUseCounter","counter","useLockAttribute","React","newCounter","RemoveScrollBar","noRelative","noImportant","_b","getGapWidth"],"mappings":"geAIA,IAAIA,EAAQC,EAAAA,eAAc,EACfC,EAAgB,qBAIvBC,EAAY,SAAUC,EAAIC,EAAeC,EAASC,EAAW,CAC7D,IAAIC,EAAOJ,EAAG,KAAMK,EAAML,EAAG,IAAKM,EAAQN,EAAG,MAAOO,EAAMP,EAAG,IAC7D,OAAIE,IAAY,SAAUA,EAAU,UAC7B;AAAA,KAAQ,OAAOM,EAAAA,sBAAuB;AAAA,qBAA0B,EAAE,OAAOL,EAAW;AAAA,mBAAuB,EAAE,OAAOI,EAAK,KAAK,EAAE,OAAOJ,EAAW;AAAA;AAAA,QAAiB,EAAE,OAAOL,EAAe;AAAA,sBAA4B,EAAE,OAAOK,EAAW;AAAA;AAAA,KAA4C,EAAE,OAAO,CACnSF,GAAiB,sBAAsB,OAAOE,EAAW,GAAG,EAC5DD,IAAY,UACR;AAAA,oBAAuB,OAAOE,EAAM;AAAA,kBAAwB,EAAE,OAAOC,EAAK;AAAA,oBAA0B,EAAE,OAAOC,EAAO;AAAA;AAAA;AAAA,mBAAgE,EAAE,OAAOC,EAAK,KAAK,EAAE,OAAOJ,EAAW;AAAA,KAAS,EACxOD,IAAY,WAAa,kBAAkB,OAAOK,EAAK,KAAK,EAAE,OAAOJ,EAAW,GAAG,CAC3F,EACS,OAAO,OAAO,EACd,KAAK,EAAE,EAAG;AAAA;AAAA;AAAA,IAAgB,EAAE,OAAOM,EAAAA,mBAAoB;AAAA,YAAiB,EAAE,OAAOF,EAAK,KAAK,EAAE,OAAOJ,EAAW;AAAA;AAAA;AAAA,IAAiB,EAAE,OAAOO,EAAAA,mBAAoB;AAAA,mBAAwB,EAAE,OAAOH,EAAK,KAAK,EAAE,OAAOJ,EAAW;AAAA;AAAA;AAAA,IAAiB,EAAE,OAAOM,EAAAA,mBAAoB,IAAI,EAAE,OAAOA,EAAAA,mBAAoB;AAAA,cAAmB,EAAE,OAAON,EAAW;AAAA;AAAA;AAAA,IAAiB,EAAE,OAAOO,EAAAA,mBAAoB,IAAI,EAAE,OAAOA,EAAAA,mBAAoB;AAAA,qBAA0B,EAAE,OAAOP,EAAW;AAAA;AAAA;AAAA,QAAqB,EAAE,OAAOL,EAAe;AAAA,KAAW,EAAE,OAAOa,EAAAA,uBAAwB,IAAI,EAAE,OAAOJ,EAAK;AAAA;AAAA,CAAY,CAC/kB,EACIK,EAAuB,UAAY,CACnC,IAAIC,EAAU,SAAS,SAAS,KAAK,aAAaf,CAAa,GAAK,IAAK,EAAE,EAC3E,OAAO,SAASe,CAAO,EAAIA,EAAU,CACzC,EACWC,EAAmB,UAAY,CACtCC,EAAM,UAAU,UAAY,CACxB,gBAAS,KAAK,aAAajB,GAAgBc,IAAyB,GAAG,UAAU,EAC1E,UAAY,CACf,IAAII,EAAaJ,EAAoB,EAAK,EACtCI,GAAc,EACd,SAAS,KAAK,gBAAgBlB,CAAa,EAG3C,SAAS,KAAK,aAAaA,EAAekB,EAAW,SAAQ,CAAE,CAEvE,CACJ,EAAG,CAAA,CAAE,CACT,EAIWC,EAAkB,SAAUjB,EAAI,CACvC,IAAIkB,EAAalB,EAAG,WAAYmB,EAAcnB,EAAG,YAAaoB,EAAKpB,EAAG,QAASE,EAAUkB,IAAO,OAAS,SAAWA,EACpHN,EAAgB,EAMhB,IAAIP,EAAMQ,EAAM,QAAQ,UAAY,CAAE,OAAOM,cAAYnB,CAAO,CAAG,EAAG,CAACA,CAAO,CAAC,EAC/E,OAAOa,EAAM,cAAcnB,EAAO,CAAE,OAAQG,EAAUQ,EAAK,CAACW,EAAYhB,EAAUiB,EAA6B,GAAf,YAAiB,CAAC,CAAE,CACxH","x_google_ignoreList":[0]}