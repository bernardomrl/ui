{"version":3,"file":"index.cjs253.js","sources":["../node_modules/date-fns/endOfYear.js"],"sourcesContent":["import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfYear} function options.\n */\n\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The end of a year\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * const result = endOfYear(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\nexport function endOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n  _date.setFullYear(year + 1, 0, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfYear;\n"],"names":["endOfYear","date","options","_date","toDate","year"],"mappings":"iJA4BO,SAASA,EAAUC,EAAMC,EAAS,CACvC,MAAMC,EAAQC,EAAAA,OAAOH,EAAMC,GAAS,EAAE,EAChCG,EAAOF,EAAM,YAAW,EAC9B,OAAAA,EAAM,YAAYE,EAAO,EAAG,EAAG,CAAC,EAChCF,EAAM,SAAS,GAAI,GAAI,GAAI,GAAG,EACvBA,CACT","x_google_ignoreList":[0]}