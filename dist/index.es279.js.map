{"version":3,"file":"index.es279.js","sources":["../node_modules/react-day-picker/dist/esm/helpers/getDates.js"],"sourcesContent":["/**\n * Returns all the dates to display in the calendar.\n *\n * This function calculates the range of dates to display based on the provided\n * display months, constraints, and calendar configuration.\n *\n * @param displayMonths The months to display in the calendar.\n * @param maxDate The maximum date to include in the range.\n * @param props The DayPicker props, including calendar configuration options.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of dates to display in the calendar.\n */\nexport function getDates(displayMonths, maxDate, props, dateLib) {\n    const firstMonth = displayMonths[0];\n    const lastMonth = displayMonths[displayMonths.length - 1];\n    const { ISOWeek, fixedWeeks, broadcastCalendar } = props ?? {};\n    const { addDays, differenceInCalendarDays, differenceInCalendarMonths, endOfBroadcastWeek, endOfISOWeek, endOfMonth, endOfWeek, isAfter, startOfBroadcastWeek, startOfISOWeek, startOfWeek, } = dateLib;\n    const startWeekFirstDate = broadcastCalendar\n        ? startOfBroadcastWeek(firstMonth, dateLib)\n        : ISOWeek\n            ? startOfISOWeek(firstMonth)\n            : startOfWeek(firstMonth);\n    const endWeekLastDate = broadcastCalendar\n        ? endOfBroadcastWeek(lastMonth)\n        : ISOWeek\n            ? endOfISOWeek(endOfMonth(lastMonth))\n            : endOfWeek(endOfMonth(lastMonth));\n    const nOfDays = differenceInCalendarDays(endWeekLastDate, startWeekFirstDate);\n    const nOfMonths = differenceInCalendarMonths(lastMonth, firstMonth) + 1;\n    const dates = [];\n    for (let i = 0; i <= nOfDays; i++) {\n        const date = addDays(startWeekFirstDate, i);\n        if (maxDate && isAfter(date, maxDate)) {\n            break;\n        }\n        dates.push(date);\n    }\n    // If fixed weeks is enabled, add the extra dates to the array\n    const nrOfDaysWithFixedWeeks = broadcastCalendar ? 35 : 42;\n    const extraDates = nrOfDaysWithFixedWeeks * nOfMonths;\n    if (fixedWeeks && dates.length < extraDates) {\n        const daysToAdd = extraDates - dates.length;\n        for (let i = 0; i < daysToAdd; i++) {\n            const date = addDays(dates[dates.length - 1], 1);\n            dates.push(date);\n        }\n    }\n    return dates;\n}\n"],"names":["getDates","displayMonths","maxDate","props","dateLib","firstMonth","lastMonth","ISOWeek","fixedWeeks","broadcastCalendar","addDays","differenceInCalendarDays","differenceInCalendarMonths","endOfBroadcastWeek","endOfISOWeek","endOfMonth","endOfWeek","isAfter","startOfBroadcastWeek","startOfISOWeek","startOfWeek","startWeekFirstDate","endWeekLastDate","nOfDays","nOfMonths","dates","i","date","extraDates","daysToAdd"],"mappings":"AAYO,SAASA,EAASC,GAAeC,GAASC,GAAOC,GAAS;AAC7D,QAAMC,IAAaJ,EAAc,CAAC,GAC5BK,IAAYL,EAAcA,EAAc,SAAS,CAAC,GAClD,EAAE,SAAAM,GAAS,YAAAC,GAAY,mBAAAC,EAAiB,IAAKN,KAAS,CAAA,GACtD,EAAE,SAAAO,GAAS,0BAAAC,GAA0B,4BAAAC,GAA4B,oBAAAC,GAAoB,cAAAC,GAAc,YAAAC,GAAY,WAAAC,GAAW,SAAAC,GAAS,sBAAAC,GAAsB,gBAAAC,GAAgB,aAAAC,EAAW,IAAMhB,GAC1LiB,IAAqBZ,IACrBS,EAAqBb,GAAYD,CAAO,IACxCG,IACIY,EAAed,CAAU,IACzBe,EAAYf,CAAU,GAC1BiB,IAAkBb,IAClBI,EAAmBP,CAAS,IAC5BC,IACIO,EAAaC,EAAWT,CAAS,CAAC,IAClCU,EAAUD,EAAWT,CAAS,CAAC,GACnCiB,IAAUZ,EAAyBW,GAAiBD,CAAkB,GACtEG,IAAYZ,EAA2BN,GAAWD,CAAU,IAAI,GAChEoB,IAAQ,CAAA;AACd,WAASC,IAAI,GAAGA,KAAKH,GAASG,KAAK;AAC/B,UAAMC,IAAOjB,EAAQW,GAAoBK,CAAC;AAC1C,QAAIxB,KAAWe,EAAQU,GAAMzB,CAAO;AAChC;AAEJ,IAAAuB,EAAM,KAAKE,CAAI;AAAA,EACnB;AAGA,QAAMC,KADyBnB,IAAoB,KAAK,MACZe;AAC5C,MAAIhB,KAAciB,EAAM,SAASG,GAAY;AACzC,UAAMC,IAAYD,IAAaH,EAAM;AACrC,aAASC,IAAI,GAAGA,IAAIG,GAAWH,KAAK;AAChC,YAAMC,IAAOjB,EAAQe,EAAMA,EAAM,SAAS,CAAC,GAAG,CAAC;AAC/C,MAAAA,EAAM,KAAKE,CAAI;AAAA,IACnB;AAAA,EACJ;AACA,SAAOF;AACX;","x_google_ignoreList":[0]}