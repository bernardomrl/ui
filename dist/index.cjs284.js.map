{"version":3,"file":"index.cjs284.js","sources":["../node_modules/react-day-picker/dist/esm/helpers/getNavMonth.js"],"sourcesContent":["/**\n * Returns the start and end months for calendar navigation.\n *\n * @param props The DayPicker props, including navigation and layout options.\n * @param dateLib The date library to use for date manipulation.\n * @returns A tuple containing the start and end months for navigation.\n */\nexport function getNavMonths(props, dateLib) {\n    let { startMonth, endMonth } = props;\n    const { startOfYear, startOfDay, startOfMonth, endOfMonth, addYears, endOfYear, newDate, today, } = dateLib;\n    // Handle deprecated code\n    const { fromYear, toYear, fromMonth, toMonth } = props;\n    if (!startMonth && fromMonth) {\n        startMonth = fromMonth;\n    }\n    if (!startMonth && fromYear) {\n        startMonth = dateLib.newDate(fromYear, 0, 1);\n    }\n    if (!endMonth && toMonth) {\n        endMonth = toMonth;\n    }\n    if (!endMonth && toYear) {\n        endMonth = newDate(toYear, 11, 31);\n    }\n    const hasYearDropdown = props.captionLayout === \"dropdown\" ||\n        props.captionLayout === \"dropdown-years\";\n    if (startMonth) {\n        startMonth = startOfMonth(startMonth);\n    }\n    else if (fromYear) {\n        startMonth = newDate(fromYear, 0, 1);\n    }\n    else if (!startMonth && hasYearDropdown) {\n        startMonth = startOfYear(addYears(props.today ?? today(), -100));\n    }\n    if (endMonth) {\n        endMonth = endOfMonth(endMonth);\n    }\n    else if (toYear) {\n        endMonth = newDate(toYear, 11, 31);\n    }\n    else if (!endMonth && hasYearDropdown) {\n        endMonth = endOfYear(props.today ?? today());\n    }\n    return [\n        startMonth ? startOfDay(startMonth) : startMonth,\n        endMonth ? startOfDay(endMonth) : endMonth,\n    ];\n}\n"],"names":["getNavMonths","props","dateLib","startMonth","endMonth","startOfYear","startOfDay","startOfMonth","endOfMonth","addYears","endOfYear","newDate","today","fromYear","toYear","fromMonth","toMonth","hasYearDropdown"],"mappings":"gFAOO,SAASA,EAAaC,EAAOC,EAAS,CACzC,GAAI,CAAE,WAAAC,EAAY,SAAAC,CAAQ,EAAKH,EAC/B,KAAM,CAAE,YAAAI,EAAa,WAAAC,EAAY,aAAAC,EAAc,WAAAC,EAAY,SAAAC,EAAU,UAAAC,EAAW,QAAAC,EAAS,MAAAC,CAAK,EAAMV,EAE9F,CAAE,SAAAW,EAAU,OAAAC,EAAQ,UAAAC,EAAW,QAAAC,CAAO,EAAKf,EAC7C,CAACE,GAAcY,IACfZ,EAAaY,GAEb,CAACZ,GAAcU,IACfV,EAAaD,EAAQ,QAAQW,EAAU,EAAG,CAAC,GAE3C,CAACT,GAAYY,IACbZ,EAAWY,GAEX,CAACZ,GAAYU,IACbV,EAAWO,EAAQG,EAAQ,GAAI,EAAE,GAErC,MAAMG,EAAkBhB,EAAM,gBAAkB,YAC5CA,EAAM,gBAAkB,iBAC5B,OAAIE,EACAA,EAAaI,EAAaJ,CAAU,EAE/BU,EACLV,EAAaQ,EAAQE,EAAU,EAAG,CAAC,EAE9B,CAACV,GAAcc,IACpBd,EAAaE,EAAYI,EAASR,EAAM,OAASW,EAAK,EAAI,IAAI,CAAC,GAE/DR,EACAA,EAAWI,EAAWJ,CAAQ,EAEzBU,EACLV,EAAWO,EAAQG,EAAQ,GAAI,EAAE,EAE5B,CAACV,GAAYa,IAClBb,EAAWM,EAAUT,EAAM,OAASW,EAAK,CAAE,GAExC,CACHT,GAAaG,EAAWH,CAAU,EAClCC,GAAWE,EAAWF,CAAQ,CACtC,CACA","x_google_ignoreList":[0]}