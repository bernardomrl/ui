{"version":3,"file":"index.es388.js","sources":["../node_modules/lodash/_baseToString.js"],"sourcesContent":["var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n"],"names":["Symbol","require$$0","arrayMap","require$$1","isArray","require$$2","isSymbol","require$$3","symbolProto","symbolToString","baseToString","value","result","_baseToString"],"mappings":";;;;;;;;AAAA,MAAIA,IAASC,EAAA,GACTC,IAAWC,EAAA,GACXC,IAAUC,EAAA,GACVC,IAAWC,EAAA,GAMXC,IAAcR,IAASA,EAAO,YAAY,QAC1CS,IAAiBD,IAAcA,EAAY,WAAW;AAU1D,WAASE,EAAaC,GAAO;AAE3B,QAAI,OAAOA,KAAS;AAClB,aAAOA;AAET,QAAIP,EAAQO,CAAK;AAEf,aAAOT,EAASS,GAAOD,CAAY,IAAI;AAEzC,QAAIJ,EAASK,CAAK;AAChB,aAAOF,IAAiBA,EAAe,KAAKE,CAAK,IAAI;AAEvD,QAAIC,IAAUD,IAAQ;AACtB,WAAQC,KAAU,OAAQ,IAAID,KAAU,SAAa,OAAOC;AAAA,EAC9D;AAEA,SAAAC,IAAiBH;;","x_google_ignoreList":[0]}