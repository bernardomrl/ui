{"version":3,"file":"index.es359.js","sources":["../node_modules/lodash/_stringToPath.js"],"sourcesContent":["var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n"],"names":["memoizeCapped","require$$0","rePropName","reEscapeChar","stringToPath","string","result","match","number","quote","subString","_stringToPath"],"mappings":";;;;;AAAA,MAAIA,IAAgBC,EAAA,GAGhBC,IAAa,oGAGbC,IAAe,YASfC,IAAeJ,EAAc,SAASK,GAAQ;AAChD,QAAIC,IAAS,CAAA;AACb,WAAID,EAAO,WAAW,CAAC,MAAM,MAC3BC,EAAO,KAAK,EAAE,GAEhBD,EAAO,QAAQH,GAAY,SAASK,GAAOC,GAAQC,GAAOC,GAAW;AACnE,MAAAJ,EAAO,KAAKG,IAAQC,EAAU,QAAQP,GAAc,IAAI,IAAKK,KAAUD,CAAM;AAAA,IACjF,CAAG,GACMD;AAAA,EACT,CAAC;AAED,SAAAK,IAAiBP;;","x_google_ignoreList":[0]}