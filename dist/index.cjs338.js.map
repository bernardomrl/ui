{"version":3,"file":"index.cjs338.js","sources":["../node_modules/lodash/_baseMatchesProperty.js"],"sourcesContent":["var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n"],"names":["baseIsEqual","require$$0","get","require$$1","hasIn","require$$2","isKey","require$$3","isStrictComparable","require$$4","matchesStrictComparable","require$$5","toKey","require$$6","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","baseMatchesProperty","path","srcValue","object","objValue","_baseMatchesProperty"],"mappings":"sVAAA,IAAIA,EAAcC,EAAAA,UAAA,EACdC,EAAMC,EAAAA,UAAA,EACNC,EAAQC,EAAAA,UAAA,EACRC,EAAQC,EAAAA,UAAA,EACRC,EAAqBC,EAAAA,UAAA,EACrBC,EAA0BC,EAAAA,UAAA,EAC1BC,EAAQC,EAAAA,UAAA,EAGRC,EAAuB,EACvBC,EAAyB,EAU7B,SAASC,EAAoBC,EAAMC,EAAU,CAC3C,OAAIZ,EAAMW,CAAI,GAAKT,EAAmBU,CAAQ,EACrCR,EAAwBE,EAAMK,CAAI,EAAGC,CAAQ,EAE/C,SAASC,EAAQ,CACtB,IAAIC,EAAWlB,EAAIiB,EAAQF,CAAI,EAC/B,OAAQG,IAAa,QAAaA,IAAaF,EAC3Cd,EAAMe,EAAQF,CAAI,EAClBjB,EAAYkB,EAAUE,EAAUN,EAAuBC,CAAsB,CACrF,CACA,CAEA,OAAAM,EAAiBL","x_google_ignoreList":[0]}