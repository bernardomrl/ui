{"version":3,"file":"index.es338.js","sources":["../node_modules/lodash/_baseMatchesProperty.js"],"sourcesContent":["var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n"],"names":["baseIsEqual","require$$0","get","require$$1","hasIn","require$$2","isKey","require$$3","isStrictComparable","require$$4","matchesStrictComparable","require$$5","toKey","require$$6","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","baseMatchesProperty","path","srcValue","object","objValue","_baseMatchesProperty"],"mappings":";;;;;;;;;;;AAAA,MAAIA,IAAcC,EAAA,GACdC,IAAMC,EAAA,GACNC,IAAQC,EAAA,GACRC,IAAQC,EAAA,GACRC,IAAqBC,EAAA,GACrBC,IAA0BC,EAAA,GAC1BC,IAAQC,EAAA,GAGRC,IAAuB,GACvBC,IAAyB;AAU7B,WAASC,EAAoBC,GAAMC,GAAU;AAC3C,WAAIZ,EAAMW,CAAI,KAAKT,EAAmBU,CAAQ,IACrCR,EAAwBE,EAAMK,CAAI,GAAGC,CAAQ,IAE/C,SAASC,GAAQ;AACtB,UAAIC,IAAWlB,EAAIiB,GAAQF,CAAI;AAC/B,aAAQG,MAAa,UAAaA,MAAaF,IAC3Cd,EAAMe,GAAQF,CAAI,IAClBjB,EAAYkB,GAAUE,GAAUN,IAAuBC,CAAsB;AAAA,IACrF;AAAA,EACA;AAEA,SAAAM,IAAiBL;;","x_google_ignoreList":[0]}