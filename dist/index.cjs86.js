"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const R=require("react"),_=require("./index.cjs103.js"),g=require("./index.cjs106.js"),u=require("react/jsx-runtime");function $(e){const r=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(e){for(const o in e)if(o!=="default"){const a=Object.getOwnPropertyDescriptor(e,o);Object.defineProperty(r,o,a.get?a:{enumerable:!0,get:()=>e[o]})}}return r.default=e,Object.freeze(r)}const m=$(R);var l="Progress",c=100,[j]=_.createContextScope(l),[y,O]=j(l),d=m.forwardRef((e,r)=>{const{__scopeProgress:o,value:a=null,max:t,getValueLabel:b=M,...N}=e;(t||t===0)&&!p(t)&&console.error(S(`${t}`,"Progress"));const n=p(t)?t:c;a!==null&&!f(a,n)&&console.error(h(`${a}`,"Progress"));const s=f(a,n)?a:null,I=i(s)?b(s,n):void 0;return u.jsx(y,{scope:o,value:s,max:n,children:u.jsx(g.Primitive.div,{"aria-valuemax":n,"aria-valuemin":0,"aria-valuenow":i(s)?s:void 0,"aria-valuetext":I,role:"progressbar","data-state":x(s,n),"data-value":s??void 0,"data-max":n,...N,ref:r})})});d.displayName=l;var P="ProgressIndicator",v=m.forwardRef((e,r)=>{const{__scopeProgress:o,...a}=e,t=O(P,o);return u.jsx(g.Primitive.div,{"data-state":x(t.value,t.max),"data-value":t.value??void 0,"data-max":t.max,...a,ref:r})});v.displayName=P;function M(e,r){return`${Math.round(e/r*100)}%`}function x(e,r){return e==null?"indeterminate":e===r?"complete":"loading"}function i(e){return typeof e=="number"}function p(e){return i(e)&&!isNaN(e)&&e>0}function f(e,r){return i(e)&&!isNaN(e)&&e<=r&&e>=0}function S(e,r){return`Invalid prop \`max\` of value \`${e}\` supplied to \`${r}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${c}\`.`}function h(e,r){return`Invalid prop \`value\` of value \`${e}\` supplied to \`${r}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${c} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var D=d,E=v;exports.Indicator=E;exports.Progress=d;exports.ProgressIndicator=v;exports.Root=D;
//# sourceMappingURL=index.cjs86.js.map
