{"version":3,"file":"index.es348.js","sources":["../node_modules/lodash/_overRest.js"],"sourcesContent":["var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n"],"names":["apply","require$$0","nativeMax","overRest","func","start","transform","args","index","length","array","otherArgs","_overRest"],"mappings":";;;;;AAAA,MAAIA,IAAQC,EAAA,GAGRC,IAAY,KAAK;AAWrB,WAASC,EAASC,GAAMC,GAAOC,GAAW;AACxC,WAAAD,IAAQH,EAAUG,MAAU,SAAaD,EAAK,SAAS,IAAKC,GAAO,CAAC,GAC7D,WAAW;AAMhB,eALIE,IAAO,WACPC,IAAQ,IACRC,IAASP,EAAUK,EAAK,SAASF,GAAO,CAAC,GACzCK,IAAQ,MAAMD,CAAM,GAEjB,EAAED,IAAQC;AACf,QAAAC,EAAMF,CAAK,IAAID,EAAKF,IAAQG,CAAK;AAEnC,MAAAA,IAAQ;AAER,eADIG,IAAY,MAAMN,IAAQ,CAAC,GACxB,EAAEG,IAAQH;AACf,QAAAM,EAAUH,CAAK,IAAID,EAAKC,CAAK;AAE/B,aAAAG,EAAUN,CAAK,IAAIC,EAAUI,CAAK,GAC3BV,EAAMI,GAAM,MAAMO,CAAS;AAAA,IACtC;AAAA,EACA;AAEA,SAAAC,IAAiBT;;","x_google_ignoreList":[0]}