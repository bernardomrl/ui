{"version":3,"file":"index.es476.js","sources":["../node_modules/lodash/_hasPath.js"],"sourcesContent":["var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n"],"names":["castPath","require$$0","isArguments","require$$1","isArray","require$$2","isIndex","require$$3","isLength","require$$4","toKey","require$$5","hasPath","object","path","hasFunc","index","length","result","key","_hasPath"],"mappings":";;;;;;;;;;AAAA,MAAIA,IAAWC,EAAA,GACXC,IAAcC,EAAA,GACdC,IAAUC,EAAA,GACVC,IAAUC,EAAA,GACVC,IAAWC,EAAA,GACXC,IAAQC,EAAA;AAWZ,WAASC,EAAQC,GAAQC,GAAMC,GAAS;AACtC,IAAAD,IAAOd,EAASc,GAAMD,CAAM;AAM5B,aAJIG,IAAQ,IACRC,IAASH,EAAK,QACdI,IAAS,IAEN,EAAEF,IAAQC,KAAQ;AACvB,UAAIE,IAAMT,EAAMI,EAAKE,CAAK,CAAC;AAC3B,UAAI,EAAEE,IAASL,KAAU,QAAQE,EAAQF,GAAQM,CAAG;AAClD;AAEF,MAAAN,IAASA,EAAOM,CAAG;AAAA,IACvB;AACE,WAAID,KAAU,EAAEF,KAASC,IAChBC,KAETD,IAASJ,KAAU,OAAO,IAAIA,EAAO,QAC9B,CAAC,CAACI,KAAUT,EAASS,CAAM,KAAKX,EAAQa,GAAKF,CAAM,MACvDb,EAAQS,CAAM,KAAKX,EAAYW,CAAM;AAAA,EAC1C;AAEA,SAAAO,IAAiBR;;","x_google_ignoreList":[0]}