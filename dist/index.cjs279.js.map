{"version":3,"file":"index.cjs279.js","sources":["../node_modules/react-day-picker/dist/esm/helpers/getDates.js"],"sourcesContent":["/**\n * Returns all the dates to display in the calendar.\n *\n * This function calculates the range of dates to display based on the provided\n * display months, constraints, and calendar configuration.\n *\n * @param displayMonths The months to display in the calendar.\n * @param maxDate The maximum date to include in the range.\n * @param props The DayPicker props, including calendar configuration options.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of dates to display in the calendar.\n */\nexport function getDates(displayMonths, maxDate, props, dateLib) {\n    const firstMonth = displayMonths[0];\n    const lastMonth = displayMonths[displayMonths.length - 1];\n    const { ISOWeek, fixedWeeks, broadcastCalendar } = props ?? {};\n    const { addDays, differenceInCalendarDays, differenceInCalendarMonths, endOfBroadcastWeek, endOfISOWeek, endOfMonth, endOfWeek, isAfter, startOfBroadcastWeek, startOfISOWeek, startOfWeek, } = dateLib;\n    const startWeekFirstDate = broadcastCalendar\n        ? startOfBroadcastWeek(firstMonth, dateLib)\n        : ISOWeek\n            ? startOfISOWeek(firstMonth)\n            : startOfWeek(firstMonth);\n    const endWeekLastDate = broadcastCalendar\n        ? endOfBroadcastWeek(lastMonth)\n        : ISOWeek\n            ? endOfISOWeek(endOfMonth(lastMonth))\n            : endOfWeek(endOfMonth(lastMonth));\n    const nOfDays = differenceInCalendarDays(endWeekLastDate, startWeekFirstDate);\n    const nOfMonths = differenceInCalendarMonths(lastMonth, firstMonth) + 1;\n    const dates = [];\n    for (let i = 0; i <= nOfDays; i++) {\n        const date = addDays(startWeekFirstDate, i);\n        if (maxDate && isAfter(date, maxDate)) {\n            break;\n        }\n        dates.push(date);\n    }\n    // If fixed weeks is enabled, add the extra dates to the array\n    const nrOfDaysWithFixedWeeks = broadcastCalendar ? 35 : 42;\n    const extraDates = nrOfDaysWithFixedWeeks * nOfMonths;\n    if (fixedWeeks && dates.length < extraDates) {\n        const daysToAdd = extraDates - dates.length;\n        for (let i = 0; i < daysToAdd; i++) {\n            const date = addDays(dates[dates.length - 1], 1);\n            dates.push(date);\n        }\n    }\n    return dates;\n}\n"],"names":["getDates","displayMonths","maxDate","props","dateLib","firstMonth","lastMonth","ISOWeek","fixedWeeks","broadcastCalendar","addDays","differenceInCalendarDays","differenceInCalendarMonths","endOfBroadcastWeek","endOfISOWeek","endOfMonth","endOfWeek","isAfter","startOfBroadcastWeek","startOfISOWeek","startOfWeek","startWeekFirstDate","endWeekLastDate","nOfDays","nOfMonths","dates","i","date","extraDates","daysToAdd"],"mappings":"gFAYO,SAASA,EAASC,EAAeC,EAASC,EAAOC,EAAS,CAC7D,MAAMC,EAAaJ,EAAc,CAAC,EAC5BK,EAAYL,EAAcA,EAAc,OAAS,CAAC,EAClD,CAAE,QAAAM,EAAS,WAAAC,EAAY,kBAAAC,CAAiB,EAAKN,GAAS,CAAA,EACtD,CAAE,QAAAO,EAAS,yBAAAC,EAA0B,2BAAAC,EAA4B,mBAAAC,EAAoB,aAAAC,EAAc,WAAAC,EAAY,UAAAC,EAAW,QAAAC,EAAS,qBAAAC,EAAsB,eAAAC,EAAgB,YAAAC,CAAW,EAAMhB,EAC1LiB,EAAqBZ,EACrBS,EAAqBb,EAAYD,CAAO,EACxCG,EACIY,EAAed,CAAU,EACzBe,EAAYf,CAAU,EAC1BiB,EAAkBb,EAClBI,EAAmBP,CAAS,EAC5BC,EACIO,EAAaC,EAAWT,CAAS,CAAC,EAClCU,EAAUD,EAAWT,CAAS,CAAC,EACnCiB,EAAUZ,EAAyBW,EAAiBD,CAAkB,EACtEG,EAAYZ,EAA2BN,EAAWD,CAAU,EAAI,EAChEoB,EAAQ,CAAA,EACd,QAASC,EAAI,EAAGA,GAAKH,EAASG,IAAK,CAC/B,MAAMC,EAAOjB,EAAQW,EAAoBK,CAAC,EAC1C,GAAIxB,GAAWe,EAAQU,EAAMzB,CAAO,EAChC,MAEJuB,EAAM,KAAKE,CAAI,CACnB,CAGA,MAAMC,GADyBnB,EAAoB,GAAK,IACZe,EAC5C,GAAIhB,GAAciB,EAAM,OAASG,EAAY,CACzC,MAAMC,EAAYD,EAAaH,EAAM,OACrC,QAASC,EAAI,EAAGA,EAAIG,EAAWH,IAAK,CAChC,MAAMC,EAAOjB,EAAQe,EAAMA,EAAM,OAAS,CAAC,EAAG,CAAC,EAC/CA,EAAM,KAAKE,CAAI,CACnB,CACJ,CACA,OAAOF,CACX","x_google_ignoreList":[0]}