{"version":3,"file":"index.cjs159.js","sources":["../node_modules/@date-fns/tz/date/index.js"],"sourcesContent":["import { tzName } from \"../tzName/index.js\";\nimport { TZDateMini } from \"./mini.js\";\nexport class TZDate extends TZDateMini {\n  //#region static\n\n  static tz(tz, ...args) {\n    return args.length ? new TZDate(...args, tz) : new TZDate(Date.now(), tz);\n  }\n\n  //#endregion\n\n  //#region representation\n\n  toISOString() {\n    const [sign, hours, minutes] = this.tzComponents();\n    const tz = `${sign}${hours}:${minutes}`;\n    return this.internal.toISOString().slice(0, -1) + tz;\n  }\n  toString() {\n    // \"Tue Aug 13 2024 07:50:19 GMT+0800 (Singapore Standard Time)\";\n    return `${this.toDateString()} ${this.toTimeString()}`;\n  }\n  toDateString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const [day, date, month, year] = this.internal.toUTCString().split(\" \");\n    // \"Tue Aug 13 2024\"\n    return `${day?.slice(0, -1) /* Remove \",\" */} ${month} ${date} ${year}`;\n  }\n  toTimeString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const time = this.internal.toUTCString().split(\" \")[4];\n    const [sign, hours, minutes] = this.tzComponents();\n    // \"07:42:23 GMT+0800 (Singapore Standard Time)\"\n    return `${time} GMT${sign}${hours}${minutes} (${tzName(this.timeZone, this)})`;\n  }\n  toLocaleString(locales, options) {\n    return Date.prototype.toLocaleString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n  toLocaleDateString(locales, options) {\n    return Date.prototype.toLocaleDateString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n  toLocaleTimeString(locales, options) {\n    return Date.prototype.toLocaleTimeString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n\n  //#endregion\n\n  //#region private\n\n  tzComponents() {\n    const offset = this.getTimezoneOffset();\n    const sign = offset > 0 ? \"-\" : \"+\";\n    const hours = String(Math.floor(Math.abs(offset) / 60)).padStart(2, \"0\");\n    const minutes = String(Math.abs(offset) % 60).padStart(2, \"0\");\n    return [sign, hours, minutes];\n  }\n\n  //#endregion\n\n  withTimeZone(timeZone) {\n    return new TZDate(+this, timeZone);\n  }\n\n  //#region date-fns integration\n\n  [Symbol.for(\"constructDateFrom\")](date) {\n    return new TZDate(+new Date(date), this.timeZone);\n  }\n\n  //#endregion\n}"],"names":["TZDate","TZDateMini","tz","args","sign","hours","minutes","day","date","month","year","time","tzName","locales","options","offset","timeZone"],"mappings":"oJAEO,MAAMA,UAAeC,EAAAA,UAAW,CAGrC,OAAO,GAAGC,KAAOC,EAAM,CACrB,OAAOA,EAAK,OAAS,IAAIH,EAAO,GAAGG,EAAMD,CAAE,EAAI,IAAIF,EAAO,KAAK,IAAG,EAAIE,CAAE,CAC1E,CAMA,aAAc,CACZ,KAAM,CAACE,EAAMC,EAAOC,CAAO,EAAI,KAAK,aAAY,EAC1CJ,EAAK,GAAGE,CAAI,GAAGC,CAAK,IAAIC,CAAO,GACrC,OAAO,KAAK,SAAS,YAAW,EAAG,MAAM,EAAG,EAAE,EAAIJ,CACpD,CACA,UAAW,CAET,MAAO,GAAG,KAAK,aAAY,CAAE,IAAI,KAAK,aAAY,CAAE,EACtD,CACA,cAAe,CAEb,KAAM,CAACK,EAAKC,EAAMC,EAAOC,CAAI,EAAI,KAAK,SAAS,cAAc,MAAM,GAAG,EAEtE,MAAO,GAAGH,GAAK,MAAM,EAAG,EAAE,CAAC,IAAqBE,CAAK,IAAID,CAAI,IAAIE,CAAI,EACvE,CACA,cAAe,CAEb,MAAMC,EAAO,KAAK,SAAS,YAAW,EAAG,MAAM,GAAG,EAAE,CAAC,EAC/C,CAACP,EAAMC,EAAOC,CAAO,EAAI,KAAK,aAAY,EAEhD,MAAO,GAAGK,CAAI,OAAOP,CAAI,GAAGC,CAAK,GAAGC,CAAO,KAAKM,EAAAA,OAAO,KAAK,SAAU,IAAI,CAAC,GAC7E,CACA,eAAeC,EAASC,EAAS,CAC/B,OAAO,KAAK,UAAU,eAAe,KAAK,KAAMD,EAAS,CACvD,GAAGC,EACH,SAAUA,GAAS,UAAY,KAAK,QAC1C,CAAK,CACH,CACA,mBAAmBD,EAASC,EAAS,CACnC,OAAO,KAAK,UAAU,mBAAmB,KAAK,KAAMD,EAAS,CAC3D,GAAGC,EACH,SAAUA,GAAS,UAAY,KAAK,QAC1C,CAAK,CACH,CACA,mBAAmBD,EAASC,EAAS,CACnC,OAAO,KAAK,UAAU,mBAAmB,KAAK,KAAMD,EAAS,CAC3D,GAAGC,EACH,SAAUA,GAAS,UAAY,KAAK,QAC1C,CAAK,CACH,CAMA,cAAe,CACb,MAAMC,EAAS,KAAK,kBAAiB,EAC/BX,EAAOW,EAAS,EAAI,IAAM,IAC1BV,EAAQ,OAAO,KAAK,MAAM,KAAK,IAAIU,CAAM,EAAI,EAAE,CAAC,EAAE,SAAS,EAAG,GAAG,EACjET,EAAU,OAAO,KAAK,IAAIS,CAAM,EAAI,EAAE,EAAE,SAAS,EAAG,GAAG,EAC7D,MAAO,CAACX,EAAMC,EAAOC,CAAO,CAC9B,CAIA,aAAaU,EAAU,CACrB,OAAO,IAAIhB,EAAO,CAAC,KAAMgB,CAAQ,CACnC,CAIA,CAAC,OAAO,IAAI,mBAAmB,CAAC,EAAER,EAAM,CACtC,OAAO,IAAIR,EAAO,CAAC,IAAI,KAAKQ,CAAI,EAAG,KAAK,QAAQ,CAClD,CAGF","x_google_ignoreList":[0]}