{"version":3,"file":"index.es509.js","sources":["../node_modules/date-fns/_lib/format/lightFormatters.js"],"sourcesContent":["import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n"],"names":["lightFormatters","date","token","signedYear","year","addLeadingZeros","month","dayPeriodEnumValue","numberOfDigits","milliseconds","fractionalSeconds"],"mappings":";AAeY,MAACA,IAAkB;AAAA;AAAA,EAE7B,EAAEC,GAAMC,GAAO;AAUb,UAAMC,IAAaF,EAAK,YAAW,GAE7BG,IAAOD,IAAa,IAAIA,IAAa,IAAIA;AAC/C,WAAOE,EAAgBH,MAAU,OAAOE,IAAO,MAAMA,GAAMF,EAAM,MAAM;AAAA,EACzE;AAAA;AAAA,EAGA,EAAED,GAAMC,GAAO;AACb,UAAMI,IAAQL,EAAK,SAAQ;AAC3B,WAAOC,MAAU,MAAM,OAAOI,IAAQ,CAAC,IAAID,EAAgBC,IAAQ,GAAG,CAAC;AAAA,EACzE;AAAA;AAAA,EAGA,EAAEL,GAAMC,GAAO;AACb,WAAOG,EAAgBJ,EAAK,QAAO,GAAIC,EAAM,MAAM;AAAA,EACrD;AAAA;AAAA,EAGA,EAAED,GAAMC,GAAO;AACb,UAAMK,IAAqBN,EAAK,SAAQ,IAAK,MAAM,IAAI,OAAO;AAE9D,YAAQC,GAAK;AAAA,MACX,KAAK;AAAA,MACL,KAAK;AACH,eAAOK,EAAmB,YAAW;AAAA,MACvC,KAAK;AACH,eAAOA;AAAA,MACT,KAAK;AACH,eAAOA,EAAmB,CAAC;AAAA,MAC7B,KAAK;AAAA,MACL;AACE,eAAOA,MAAuB,OAAO,SAAS;AAAA,IACtD;AAAA,EACE;AAAA;AAAA,EAGA,EAAEN,GAAMC,GAAO;AACb,WAAOG,EAAgBJ,EAAK,SAAQ,IAAK,MAAM,IAAIC,EAAM,MAAM;AAAA,EACjE;AAAA;AAAA,EAGA,EAAED,GAAMC,GAAO;AACb,WAAOG,EAAgBJ,EAAK,SAAQ,GAAIC,EAAM,MAAM;AAAA,EACtD;AAAA;AAAA,EAGA,EAAED,GAAMC,GAAO;AACb,WAAOG,EAAgBJ,EAAK,WAAU,GAAIC,EAAM,MAAM;AAAA,EACxD;AAAA;AAAA,EAGA,EAAED,GAAMC,GAAO;AACb,WAAOG,EAAgBJ,EAAK,WAAU,GAAIC,EAAM,MAAM;AAAA,EACxD;AAAA;AAAA,EAGA,EAAED,GAAMC,GAAO;AACb,UAAMM,IAAiBN,EAAM,QACvBO,IAAeR,EAAK,gBAAe,GACnCS,IAAoB,KAAK;AAAA,MAC7BD,IAAe,KAAK,IAAI,IAAID,IAAiB,CAAC;AAAA,IACpD;AACI,WAAOH,EAAgBK,GAAmBR,EAAM,MAAM;AAAA,EACxD;AACF;","x_google_ignoreList":[0]}