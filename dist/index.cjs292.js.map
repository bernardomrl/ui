{"version":3,"file":"index.cjs292.js","sources":["../node_modules/react-day-picker/dist/esm/selection/useRange.js"],"sourcesContent":["import { useControlledValue } from \"../helpers/useControlledValue.js\";\nimport { addToRange, rangeContainsModifiers } from \"../utils/index.js\";\nimport { rangeIncludesDate } from \"../utils/rangeIncludesDate.js\";\n/**\n * Hook to manage range selection in the DayPicker component.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns An object containing the selected range, a function to select a\n *   range, and a function to check if a date is within the range.\n */\nexport function useRange(props, dateLib) {\n    const { disabled, excludeDisabled, selected: initiallySelected, required, onSelect, } = props;\n    const [internallySelected, setSelected] = useControlledValue(initiallySelected, onSelect ? initiallySelected : undefined);\n    const selected = !onSelect ? internallySelected : initiallySelected;\n    const isSelected = (date) => selected && rangeIncludesDate(selected, date, false, dateLib);\n    const select = (triggerDate, modifiers, e) => {\n        const { min, max } = props;\n        const newRange = triggerDate\n            ? addToRange(triggerDate, selected, min, max, required, dateLib)\n            : undefined;\n        if (excludeDisabled && disabled && newRange?.from && newRange.to) {\n            if (rangeContainsModifiers({ from: newRange.from, to: newRange.to }, disabled, dateLib)) {\n                // if a disabled days is found, the range is reset\n                newRange.from = triggerDate;\n                newRange.to = undefined;\n            }\n        }\n        if (!onSelect) {\n            setSelected(newRange);\n        }\n        onSelect?.(newRange, triggerDate, modifiers, e);\n        return newRange;\n    };\n    return {\n        selected,\n        select,\n        isSelected,\n    };\n}\n"],"names":["useRange","props","dateLib","disabled","excludeDisabled","initiallySelected","required","onSelect","internallySelected","setSelected","useControlledValue","selected","triggerDate","modifiers","e","min","max","newRange","addToRange","rangeContainsModifiers","date","rangeIncludesDate"],"mappings":"kNAYO,SAASA,EAASC,EAAOC,EAAS,CACrC,KAAM,CAAE,SAAAC,EAAU,gBAAAC,EAAiB,SAAUC,EAAmB,SAAAC,EAAU,SAAAC,CAAQ,EAAMN,EAClF,CAACO,EAAoBC,CAAW,EAAIC,EAAAA,mBAAmBL,EAAmBE,EAAWF,EAAoB,MAAS,EAClHM,EAAYJ,EAAgCF,EAArBG,EAoB7B,MAAO,CACH,SAAAG,EACA,OApBW,CAACC,EAAaC,EAAWC,IAAM,CAC1C,KAAM,CAAE,IAAAC,EAAK,IAAAC,CAAG,EAAKf,EACfgB,EAAWL,EACXM,EAAAA,WAAWN,EAAaD,EAAUI,EAAKC,EAAKV,EAAUJ,CAAO,EAC7D,OACN,OAAIE,GAAmBD,GAAYc,GAAU,MAAQA,EAAS,IACtDE,yBAAuB,CAAE,KAAMF,EAAS,KAAM,GAAIA,EAAS,EAAE,EAAId,EAAUD,CAAO,IAElFe,EAAS,KAAOL,EAChBK,EAAS,GAAK,QAGjBV,GACDE,EAAYQ,CAAQ,EAExBV,IAAWU,EAAUL,EAAaC,EAAWC,CAAC,EACvCG,CACX,EAII,WAtBgBG,GAAST,GAAYU,EAAAA,kBAAkBV,EAAUS,EAAM,GAAOlB,CAAO,CAuB7F,CACA","x_google_ignoreList":[0]}